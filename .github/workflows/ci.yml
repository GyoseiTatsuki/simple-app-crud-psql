name: Build and Deploy Docker

on:
  push:
    branches:
      - main  # Lance le workflow pour chaque push sur la branche main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Postgres configuration
        run: |
          # Remplace les valeurs dans le fichier de configuration dans le répertoire 'configs'
          sed -i 's|password=.*|password=${{ secrets.DB_PASSWORD }}|' ../project/db/resources/configs/config_file.conf
          sed -i 's|database=.*|database=${{ secrets.DB_NAME }}|' ../project/db/resources/configs/config_file.conf

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build Docker image
        run: docker build -t myapp:latest .

      - name: Tag Docker image
        run: docker tag myapp:latest ${{ secrets.DOCKER_USERNAME }}/myapp:latest

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/myapp:latest

  deploy:
    needs: build  # Lance ce job après le job build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Copy Deploy Script to Remote Server
        run: |
          echo '#!/bin/bash' > deploy.sh
          echo 'echo "Logging into Docker..."' >> deploy.sh
          echo 'echo "$LC_DOCKER_TOKEN" | docker login -u "$LC_DOCKER_USERNAME" --password-stdin' >> deploy.sh
          echo 'sudo docker pull $LC_DOCKER_USERNAME/myapp:latest' >> deploy.sh
          echo 'sudo docker stop myapp || true' >> deploy.sh
          echo 'sudo docker rm myapp || true' >> deploy.sh
          echo 'sudo docker run -d --name myapp -p 8088:8088 $LC_DOCKER_USERNAME/myapp:latest' >> deploy.sh
          chmod +x deploy.sh
          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa deploy.sh azureuser@20.19.81.140:/tmp/deploy.sh
        
      - name: Run Deploy Script on Remote Server
        env:
          LC_DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          LC_DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
        run: ssh -o StrictHostKeyChecking=no -o SendEnv=LC_DOCKER_USERNAME -o SendEnv=LC_DOCKER_TOKEN -i ~/.ssh/id_rsa azureuser@20.19.81.140 'bash /tmp/deploy.sh'
        