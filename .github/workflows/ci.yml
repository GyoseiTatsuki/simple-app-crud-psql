name: Build and Deploy Docker

on:
  push:
    branches:
      - main  # Lance le workflow pour chaque push sur la branche main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build Docker image
        run: docker build -t myapp:latest .

      - name: Tag Docker image
        run: docker tag myapp:latest ${{ secrets.DOCKER_USERNAME }}/myapp:latest

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/myapp:latest

  deploy:
    needs: build  # Lance ce job après le job build
    runs-on: ubuntu-latest
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Ru

    #   - name: Deploy to remote server
    #     uses: appleboy/ssh-action@v0.1.4
    #     with:
    #       host: ${{ secrets.REMOTE_HOST }}
    #       username: ${{ secrets.REMOTE_USER }}
    #       key: ${{ secrets.SSH_PRIVATE_KEY }}  # Utilisation de la clé privée
    #       script: |
    #         echo "Logging into Docker..."
    #         docker login -u $DOCKER_USERNAME -p $DOCKER_TOKEN
    #         docker pull $DOCKER_USERNAME/myapp:latest
    #         docker stop myapp || true
    #         docker rm myapp || true
    #         docker run -d --name myapp -p 80:80 $DOCKER_USERNAME/myapp:latest
    #     env:
    #       DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
    #       DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}


    # ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa.pem admin_@4.233.150.126 "echo 'Connected to VM!'"
    #         echo "Logging into Docker..."
    #         docker login -u $DOCKER_USERNAME -p $DOCKER_TOKEN
    #         echo "Logging into Docker OK"
    #         docker pull $DOCKER_USERNAME/myapp:latest
    #         echo "PULL"
    #         docker stop myapp || true
    #         echo "STOP"
    #         docker rm myapp || true
    #         echo "RM"
    #         docker run -d --name myapp -p 80:80 $DOCKER_USERNAME/myapp:latest